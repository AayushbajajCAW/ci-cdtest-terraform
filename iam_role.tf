resource "aws_iam_role" "this_role" {
  name = "test_ecs_role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = ""
        Principal = {
          Service = "ecs-tasks.amazonaws.com"
        }
      },
    ]
  })
  inline_policy {
    name   = "env-access-policy"
    policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [{
        "Sid": "VisualEditor0",
        "Effect": "Allow",
        "Action": [
            "ssm:GetParameters",
            "ssm:GetParameter"
        ],
        "Resource": "arn:aws:ssm:*:${data.aws_caller_identity.current.account_id}:parameter/*"
    }]
}
EOF
  }
  depends_on = [
    aws_ssm_parameter.this_param
  ]
}
resource "aws_iam_role_policy_attachment" "ecs_task_execution_role_policy" {
  role       = aws_iam_role.this_role.name
  policy_arn = data.aws_iam_policy.ecs-policy.arn
  depends_on = [
    aws_ssm_parameter.this_param
  ]
}





resource "aws_iam_role" "ecs-autoscale-role" {
  name               = "ecs-scale-application"
  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "application-autoscaling.amazonaws.com"
      },
      "Effect": "Allow"
    }
  ]
}
EOF
}
resource "aws_iam_role_policy_attachment" "ecs-autoscale" {
  role       = aws_iam_role.ecs-autoscale-role.id
  policy_arn = data.aws_iam_policy.esc-autoscale-policy.arn
}

resource "aws_iam_policy" "terraform_pike" {
  name_prefix = "terraform_pike"
  path        = "/"
  description = "Pike Autogenerated policy from IAC"

  policy = jsonencode({
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "budgets:ModifyBudget",
                "budgets:ViewBudget"
            ],
            "Resource": "*"
        }
    ]
})
}








